[{"/Users/lion/Desktop/hds/src/index.js":"1","/Users/lion/Desktop/hds/src/App.js":"2","/Users/lion/Desktop/hds/src/components/nav/Navbar.js":"3","/Users/lion/Desktop/hds/src/components/Timeslots.js":"4","/Users/lion/Desktop/hds/src/graphql/queries.js":"5","/Users/lion/Desktop/hds/src/aws-exports.js":"6","/Users/lion/Desktop/hds/src/components/Resource.js":"7","/Users/lion/Desktop/hds/src/components/Calendar.js":"8","/Users/lion/Desktop/hds/src/components/Booking.js":"9","/Users/lion/Desktop/hds/src/graphql/subscriptions.js":"10","/Users/lion/Desktop/hds/src/graphql/mutations.js":"11","/Users/lion/Desktop/hds/src/components/BookingList.js":"12","/Users/lion/Desktop/hds/src/components/nav/Button.js":"13","/Users/lion/Desktop/hds/src/components/Admin.js":"14","/Users/lion/Desktop/hds/src/components/Home.js":"15"},{"size":261,"mtime":1611376382432,"results":"16","hashOfConfig":"17"},{"size":2543,"mtime":1611500870573,"results":"18","hashOfConfig":"17"},{"size":2319,"mtime":1611510014576,"results":"19","hashOfConfig":"17"},{"size":2736,"mtime":1611507394679,"results":"20","hashOfConfig":"17"},{"size":2499,"mtime":1611488748947,"results":"21","hashOfConfig":"17"},{"size":1196,"mtime":1611516025036,"results":"22","hashOfConfig":"17"},{"size":3888,"mtime":1611501154437,"results":"23","hashOfConfig":"17"},{"size":1575,"mtime":1611507378421,"results":"24","hashOfConfig":"17"},{"size":4795,"mtime":1611510075783,"results":"25","hashOfConfig":"17"},{"size":3253,"mtime":1611488749070,"results":"26","hashOfConfig":"17"},{"size":4267,"mtime":1611488749009,"results":"27","hashOfConfig":"17"},{"size":2970,"mtime":1611513834717,"results":"28","hashOfConfig":"17"},{"size":695,"mtime":1611509783608,"results":"29","hashOfConfig":"17"},{"size":3802,"mtime":1611513910247,"results":"30","hashOfConfig":"17"},{"size":183,"mtime":1611513686612,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lrvrxq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/lion/Desktop/hds/src/index.js",[],["68","69"],"/Users/lion/Desktop/hds/src/App.js",["70","71"],"import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './components/nav/Navbar';\nimport Home from './components/Home';\nimport Booking from './components/Booking';\nimport Admin from './components/Admin';\nimport { Auth, Hub } from 'aws-amplify';\n\n\nfunction App() {\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [signedIn, setSignedIn] = useState(false)\n\n  const checkUser = () => {\n    Auth.currentAuthenticatedUser()\n      .then(user => console.log(user))\n      .catch(err => console.log(err))\n  }\n\n  const signOut = () => {\n    Auth.signOut()\n      .then(data => {\n        console.log(data)\n        setSignedIn(false)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const signIn = () => {\n    Auth.federatedSignIn()\n      .then(data => console.log(data))\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    Hub.listen('auth', ({ payload: { event, data } }) => {\n      switch (event) {\n        case 'signIn':\n        case 'cognitoHostedUI':\n          getUser().then(user => {\n            setUserId(user.attributes.sub)\n            setUserName(user.username)\n            setSignedIn(true)\n          });\n          break;\n        case 'signOut':\n          setUserId(\"\")\n          setUserName(\"\")\n          break;\n        case 'signIn_failure':\n        case 'cognitoHostedUI_failure':\n          console.log('Sign in failure', data);\n          break;\n      }\n    });\n\n    getUser().then(userData => setUser(userData));\n  }, []);\n\n  function getUser() {\n    return Auth.currentAuthenticatedUser()\n      .then(userData => userData)\n      .catch(() => console.log('Not signed in'));\n  }\n\n\n  return (\n    <div className=\"bgimage\">\n      <div>\n        <button onClick={checkUser}>Check User</button>\n        <Router>\n          <Navbar\n            signIn={signIn}\n            signOut={signOut}\n            userId={userId}\n            userName={userName}\n            signedIn={signedIn}\n          />\n          <Switch>\n            <Route path='/' exact component={() =>\n              <Home userName={userName} signedIn={signedIn} />} />\n            <Route path='/bookings' exact component={() =>\n              <Booking userId={userId} userName={userName} />}\n            />\n            <Route path='/admin' exact component={Admin} />\n          </Switch>\n        </Router>\n      </div >\n\n    </div>\n  );\n}\n\nexport default App;\n\n","/Users/lion/Desktop/hds/src/components/nav/Navbar.js",["72"],"import React, { useState, useEffect } from 'react';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport './Navbar.css';\n\nfunction Navbar({ signOut, signIn, userId, signedIn }) {\n  const [click, setClick] = useState(false);\n  const [button2, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const adminId = \"a2cda53a-aa2b-49b0-a442-4e1bd7668150\"\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n\n  window.addEventListener('resize', showButton);\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            HDS\n            <i class='fas fa-th' />\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n\n            <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n            {\n              signedIn &&\n              <li className='nav-item'>\n                <Link to='/bookings' className='nav-links' onClick={closeMobileMenu}>\n                  Bookings\n              </Link>\n              </li>\n            }\n            {userId === adminId &&\n              <li className='nav-item'>\n                <Link to='/admin' className='nav-links' onClick={closeMobileMenu}>\n                  Admin\n              </Link>\n              </li>\n            }\n            <li>\n\n              <Link className='nav-links-mobile' onClick={() => { closeMobileMenu(); signedIn ? signOut() : signIn(); }}>\n                {signedIn ? \"Sign out\" : \"Sign In\"}\n              </Link>\n            </li>\n          </ul>\n          {button2 && <Button buttonStyle='btn--outline' onClick={signedIn ? signOut : signIn}>\n            {signedIn ? \"Sign out\" : \"Sign In\"}\n          </Button>}\n        </div>\n      </nav >\n    </>\n  );\n}\n\nexport default Navbar;","/Users/lion/Desktop/hds/src/components/Timeslots.js",["73"],"import React, { useState, useEffect } from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport './Timeslots.css'\nimport { onCreateEvents } from '../graphql/subscriptions';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { listEventss } from '../graphql/queries';\n\n\nconst timeslots = [\n  {\n    id: 0,\n    value: \"9am-10am\"\n  },\n  {\n    id: 1,\n    value: \"10am-11am\"\n  },\n  {\n    id: 2,\n    value: \"11am-12pm\"\n  },\n  {\n    id: 3,\n    value: \"12pm-1pm\"\n  },\n  {\n    id: 4,\n    value: \"1pm-2pm\"\n  },\n  {\n    id: 5,\n    value: \"2pm-3pm\"\n  }, {\n    id: 6,\n    value: \"3pm-4pm\"\n  }, {\n    id: 7,\n    value: \"4pm-5pm\"\n  },\n]\n\n\nfunction Timeslots({ setBookingTimeSlots, bookedTimeSlotsId, handleAddBooking }) {\n  const [selectedTimeSlots, setSelectedTimeSlots] = useState([]);\n\n  // const [bookedTimeSlots, setBookedTimeSlots] = useState([]);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n\n  //console.log(\"selected timeslot\", selectedTimeSlots)\n\n  const handleTimeSlots = (event, values) => {\n    setSelectedTimeSlots(values);\n    setBookingTimeSlots(values)\n\n    //get keys of the timeslots from object\n    //let keys = timeslots.filter(x => values.includes(x.value)).map(timeslot => timeslot.id)\n    //console.log(keys);\n    //console.log(values);\n  };\n\n  // Shows available timings left\n  useEffect(() => {\n\n    setAvailableTimeSlots(timeslots.filter(x => !bookedTimeSlotsId.includes(x.id)))\n\n  }, [bookedTimeSlotsId, handleAddBooking, selectedTimeSlots])\n\n  // Subscriptions when create event\n  useEffect(() => {\n    const createEventListener = API.graphql(graphqlOperation(onCreateEvents))\n      .subscribe({\n        next: eventData => {\n          setSelectedTimeSlots([]);\n\n          //const newEvent = eventData.value.data.onCreateEvents\n          //const newEventTimeId = [newEvent.timeslotId]\n          //console.log(newEventTimeId)\n          //console.log(availableTimeSlots)\n        }\n      })\n    return () => {\n      //clean up subscription\n      createEventListener.unsubscribe()\n    }\n  })\n\n  return (\n    <div>\n      <h2>Step 3: Pick a timeslot</h2>\n      <div>\n        <ToggleButtonGroup value={selectedTimeSlots} onChange={handleTimeSlots}>\n\n          {availableTimeSlots.map((slot, idx) => {\n            return (\n              <ToggleButton\n                value={slot.value}\n                key={slot.id}\n              >\n                <ScheduleIcon />\n                <p> {slot.value} </p>\n              </ToggleButton>\n            )\n          })}\n\n        </ToggleButtonGroup>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default Timeslots\n\n\n\n\n\n","/Users/lion/Desktop/hds/src/graphql/queries.js",[],"/Users/lion/Desktop/hds/src/aws-exports.js",[],"/Users/lion/Desktop/hds/src/components/Resource.js",[],"/Users/lion/Desktop/hds/src/components/Calendar.js",[],"/Users/lion/Desktop/hds/src/components/Booking.js",["74","75"],"import React, { useEffect, useState } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { createEvents } from '../graphql/mutations';\n\nimport Resource from './Resource'\nimport Calendar from './Calendar'\nimport Timeslots from './Timeslots';\nimport { listEventss, listResourcess } from '../graphql/queries';\nimport BookingList from './BookingList';\nimport './Booking.css'\n\nconst timeslots = [\n  {\n    id: 0,\n    value: \"9am-10am\"\n  },\n  {\n    id: 1,\n    value: \"10am-11am\"\n  },\n  {\n    id: 2,\n    value: \"11am-12pm\"\n  },\n  {\n    id: 3,\n    value: \"12pm-1pm\"\n  },\n  {\n    id: 4,\n    value: \"1pm-2pm\"\n  },\n  {\n    id: 5,\n    value: \"2pm-3pm\"\n  }, {\n    id: 6,\n    value: \"3pm-4pm\"\n  }, {\n    id: 7,\n    value: \"4pm-5pm\"\n  },\n]\n\nfunction Booking({ userId, userName }) {\n  const [locations, setLocations] = useState(\"\");\n  const [resourceTypes, setResourceTypes] = useState(\"\");\n  const [resource, setResource] = useState(\"\");\n  const [resourceId, setResourceId] = useState(\"\");\n  const [purpose, setPurpose] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [bookingTimeSlots, setBookingTimeSlots] = useState([]);\n  const [bookedTimeSlotsId, setBookedTimeSlotsId] = useState([]);\n\n  //console.log(\"resourceid\", resourceId)\n  //console.log(\"bookedtimeslotId\", bookedTimeSlotsId)\n  //console.log(\"bookingTimeSlots\", bookingTimeSlots)\n\n  // RESOURCES \n  // get id of resource\n  useEffect(() => {\n    const getResourceType = async () => {\n      const result = await API.graphql(graphqlOperation(listResourcess, {\n        filter: {\n          locationName: {\n            contains: locations\n          },\n          resourceType: {\n            contains: resourceTypes\n          },\n          name: {\n            contains: resource\n          }\n        }\n      }));\n      const result2 = result.data.listResourcess.items;\n      setResourceId(result2.map(a => a.id))\n      //console.log(\"resourceid\", String(resourceId))\n      //console.log(bookingTimeSlots)\n    }\n    getResourceType();\n\n  }, [locations, resourceTypes, resource])\n\n\n  const handleChangePurpose = e => {\n    setPurpose(e.target.value)\n  }\n\n  const handleAddBooking = async e => {\n    e.preventDefault()\n\n    // submit individual bookings based on the no. of timeslot\n    await bookingTimeSlots.map(slot => {\n      const input = {\n        userId: userId,\n        userName: userName,\n        title: purpose,\n        timeslot: slot,\n        timeslotId: timeslots.filter(timeObj => slot.includes(timeObj.value)).map(timeslot => timeslot.id)[0],\n        date: date,\n        eventsResourceIdId: String(resourceId)\n      }\n      API.graphql(graphqlOperation(createEvents, { input }))\n    })\n    setBookingTimeSlots([])\n  }\n\n  // update timeslots after state changes\n  useEffect(() => {\n    updateTimeSlots();\n  }, [resourceId, date, bookingTimeSlots])\n\n  const updateTimeSlots = async () => {\n    const result = await API.graphql(graphqlOperation(listEventss, {\n      filter: {\n        eventsResourceIdId: {\n          eq: String(resourceId)\n        },\n        date: {\n          eq: date\n        }\n      }\n    }));\n    const result2 = result.data.listEventss.items;\n    setBookedTimeSlotsId(result2.map(slot => slot.timeslotId))\n  }\n\n\n  return (\n    <div className=\"\">\n      <div className=\"cards__container\">\n        <div clasName=\"cards__wrapper\">\n          <h2>Welcome {userName}, </h2>\n          <ul className='cards__items'>\n            <Resource\n              locations={locations}\n              setLocations={setLocations}\n              resourceTypes={resourceTypes}\n              setResourceTypes={setResourceTypes}\n              setResource={setResource}\n            />\n            <Calendar\n              setDate={setDate}\n            />\n          </ul>\n          <ul>\n            <Timeslots\n              resourceId={resourceId}\n              date={date}\n              setBookingTimeSlots={setBookingTimeSlots}\n              bookedTimeSlotsId={bookedTimeSlotsId}\n            />\n          </ul>\n\n\n          <form className=\"form-inline\" onSubmit={handleAddBooking}>\n            <label for=\"text\">Purpose: </label>\n            <input\n              style={{ width: '70%' }}\n              type=\"text\"\n              placeholder=\"Purpose of Booking\"\n              name=\"Purpose\"\n              required\n              value={purpose}\n              onChange={handleChangePurpose}\n            />\n            <input\n              type=\"submit\"\n              className=\"btn\"\n              value=\"Book Resource\"\n              style={{ fontSize: '14px', width: '15%' }}\n            />\n          </form>\n\n          <BookingList\n            updateTimeSlots={updateTimeSlots}\n            userId={userId}\n            userName={userName}\n          />\n\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\nexport default Booking\n","/Users/lion/Desktop/hds/src/graphql/subscriptions.js",[],"/Users/lion/Desktop/hds/src/graphql/mutations.js",[],"/Users/lion/Desktop/hds/src/components/BookingList.js",["76","77"],"/Users/lion/Desktop/hds/src/components/nav/Button.js",["78"],"import React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <div className='btn-mobile'>\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </div>\n  );\n};\n","/Users/lion/Desktop/hds/src/components/Admin.js",["79","80"],"/Users/lion/Desktop/hds/src/components/Home.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":15,"column":10,"nodeType":"87","messageId":"88","endLine":15,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":41,"column":7,"nodeType":"91","messageId":"92","endLine":58,"endColumn":8},{"ruleId":"85","severity":1,"message":"93","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":14},{"ruleId":"85","severity":1,"message":"94","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":94,"column":37,"nodeType":"97","messageId":"98","endLine":94,"endColumn":39},{"ruleId":"99","severity":1,"message":"100","line":112,"column":6,"nodeType":"101","endLine":112,"endColumn":42,"suggestions":"102"},{"ruleId":"85","severity":1,"message":"93","line":1,"column":33,"nodeType":"87","messageId":"88","endLine":1,"endColumn":37},{"ruleId":"85","severity":1,"message":"103","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":16},{"ruleId":"85","severity":1,"message":"104","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"105","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"106","line":57,"column":9,"nodeType":"87","messageId":"88","endLine":57,"endColumn":27},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Auth' is defined but never used.","'listEventss' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateTimeSlots'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'Calendar' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'handleDisableDates' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [resourceId, date, bookingTimeSlots, updateTimeSlots]",{"range":"112","text":"113"},[2795,2831],"[resourceId, date, bookingTimeSlots, updateTimeSlots]"]