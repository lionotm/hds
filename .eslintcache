[{"/Users/lion/Desktop/hds/src/index.js":"1","/Users/lion/Desktop/hds/src/App.js":"2","/Users/lion/Desktop/hds/src/components/nav/Navbar.js":"3","/Users/lion/Desktop/hds/src/components/Timeslots.js":"4","/Users/lion/Desktop/hds/src/components/Home.js":"5","/Users/lion/Desktop/hds/src/graphql/queries.js":"6","/Users/lion/Desktop/hds/src/aws-exports.js":"7","/Users/lion/Desktop/hds/src/components/Resource.js":"8","/Users/lion/Desktop/hds/src/components/Calendar.js":"9","/Users/lion/Desktop/hds/src/components/Booking.js":"10","/Users/lion/Desktop/hds/src/graphql/subscriptions.js":"11","/Users/lion/Desktop/hds/src/graphql/mutations.js":"12","/Users/lion/Desktop/hds/src/components/BookingList.js":"13","/Users/lion/Desktop/hds/src/components/nav/Button.js":"14","/Users/lion/Desktop/hds/src/components/Admin.js":"15"},{"size":261,"mtime":1611376382432,"results":"16","hashOfConfig":"17"},{"size":1663,"mtime":1611496881678,"results":"18","hashOfConfig":"17"},{"size":2443,"mtime":1611495923006,"results":"19","hashOfConfig":"17"},{"size":2750,"mtime":1611479289052,"results":"20","hashOfConfig":"17"},{"size":125,"mtime":1611398186102,"results":"21","hashOfConfig":"17"},{"size":2499,"mtime":1611488748947,"results":"22","hashOfConfig":"17"},{"size":1196,"mtime":1611488749624,"results":"23","hashOfConfig":"17"},{"size":3888,"mtime":1611416429628,"results":"24","hashOfConfig":"17"},{"size":1610,"mtime":1611479037271,"results":"25","hashOfConfig":"17"},{"size":4272,"mtime":1611496907787,"results":"26","hashOfConfig":"17"},{"size":3253,"mtime":1611488749070,"results":"27","hashOfConfig":"17"},{"size":4267,"mtime":1611488749009,"results":"28","hashOfConfig":"17"},{"size":2909,"mtime":1611496336252,"results":"29","hashOfConfig":"17"},{"size":711,"mtime":1611490595202,"results":"30","hashOfConfig":"17"},{"size":3264,"mtime":1611496090127,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lrvrxq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"/Users/lion/Desktop/hds/src/index.js",[],["67","68"],"/Users/lion/Desktop/hds/src/App.js",["69","70","71"],"/Users/lion/Desktop/hds/src/components/nav/Navbar.js",["72"],"import React, { useState, useEffect } from 'react';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport './Navbar.css';\n\nfunction Navbar({ signOut, userId, userName }) {\n  const [click, setClick] = useState(false);\n  const [button2, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const adminId = \"a2cda53a-aa2b-49b0-a442-4e1bd7668150\"\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n\n  window.addEventListener('resize', showButton);\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            HDS\n            <i class='fas fa-th' />\n          </Link>\n\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n\n            <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n\n            <li className='nav-item'>\n              <Link to='/bookings' className='nav-links' onClick={closeMobileMenu}>\n                Bookings\n              </Link>\n            </li>\n            {userId === adminId &&\n              <li className='nav-item'>\n                <Link to='/admin' className='nav-links' onClick={closeMobileMenu}>\n                  Admin\n              </Link>\n              </li>\n            }\n            {\n              userId &&\n              <li>\n                <Link className='nav-links-mobile' onClick={() => { closeMobileMenu(); signOut(); }}>\n                  Sign Out\n              </Link>\n              </li>\n            }\n            <li>\n              <Link Link to='/sign-in' className='nav-links-mobile' onClick={closeMobileMenu} >\n                Sign In\n              </Link>\n            </li>\n\n          </ul>\n          {button2 && <Button buttonStyle='btn--outline'>Sign In</Button>}\n          {button2 && <Button buttonStyle='btn--outline' onClick={signOut}>Sign out</Button>}\n        </div>\n      </nav >\n    </>\n  );\n}\n\nexport default Navbar;","/Users/lion/Desktop/hds/src/components/Timeslots.js",["73"],"import React, { useState, useEffect } from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport './Timeslots.css'\nimport { onCreateEvents } from '../graphql/subscriptions';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { listEventss } from '../graphql/queries';\n\n\nconst timeslots = [\n  {\n    id: 0,\n    value: \"9am-10am\"\n  },\n  {\n    id: 1,\n    value: \"10am-11am\"\n  },\n  {\n    id: 2,\n    value: \"11am-12pm\"\n  },\n  {\n    id: 3,\n    value: \"12pm-1pm\"\n  },\n  {\n    id: 4,\n    value: \"1pm-2pm\"\n  },\n  {\n    id: 5,\n    value: \"2pm-3pm\"\n  }, {\n    id: 6,\n    value: \"3pm-4pm\"\n  }, {\n    id: 7,\n    value: \"4pm-5pm\"\n  },\n]\n\n\nfunction Timeslots({ setBookingTimeSlots, bookedTimeSlotsId, handleAddBooking }) {\n  const [selectedTimeSlots, setSelectedTimeSlots] = useState([]);\n\n  // const [bookedTimeSlots, setBookedTimeSlots] = useState([]);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n\n  //console.log(\"selected timeslot\", selectedTimeSlots)\n\n  const handleTimeSlots = (event, values) => {\n    setSelectedTimeSlots(values);\n    setBookingTimeSlots(values)\n\n    //get keys of the timeslots from object\n    //let keys = timeslots.filter(x => values.includes(x.value)).map(timeslot => timeslot.id)\n    //console.log(keys);\n    //console.log(values);\n  };\n\n  // Shows available timings left\n  useEffect(() => {\n\n    setAvailableTimeSlots(timeslots.filter(x => !bookedTimeSlotsId.includes(x.id)))\n\n  }, [bookedTimeSlotsId, handleAddBooking, selectedTimeSlots])\n\n  // Subscriptions when create event\n  useEffect(() => {\n    const createEventListener = API.graphql(graphqlOperation(onCreateEvents))\n      .subscribe({\n        next: eventData => {\n          setSelectedTimeSlots([]);\n\n          //const newEvent = eventData.value.data.onCreateEvents\n          //const newEventTimeId = [newEvent.timeslotId]\n          //console.log(newEventTimeId)\n          //console.log(availableTimeSlots)\n        }\n      })\n    return () => {\n      //clean up subscription\n      createEventListener.unsubscribe()\n    }\n  })\n\n  return (\n    <div>\n      <h1>Step 3:</h1>\n      <p>Pick a Timeslot</p>\n\n      <div>\n        <ToggleButtonGroup value={selectedTimeSlots} onChange={handleTimeSlots}>\n\n          {availableTimeSlots.map((slot, idx) => {\n            return (\n              <ToggleButton\n                value={slot.value}\n                key={slot.id}\n              >\n                <ScheduleIcon />\n                <p> {slot.value} </p>\n              </ToggleButton>\n            )\n          })}\n\n        </ToggleButtonGroup>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default Timeslots\n\n\n\n\n\n","/Users/lion/Desktop/hds/src/components/Home.js",[],"/Users/lion/Desktop/hds/src/graphql/queries.js",[],"/Users/lion/Desktop/hds/src/aws-exports.js",[],"/Users/lion/Desktop/hds/src/components/Resource.js",[],"/Users/lion/Desktop/hds/src/components/Calendar.js",[],"/Users/lion/Desktop/hds/src/components/Booking.js",["74","75"],"/Users/lion/Desktop/hds/src/graphql/subscriptions.js",[],"/Users/lion/Desktop/hds/src/graphql/mutations.js",[],"/Users/lion/Desktop/hds/src/components/BookingList.js",["76"],"import { API, graphqlOperation, Auth } from 'aws-amplify';\nimport React, { useState, useEffect } from 'react'\nimport { listEventss } from '../graphql/queries';\nimport { deleteEvents } from '../graphql/mutations'\nimport './BookingList.css'\nimport { onCreateEvents, onDeleteEvents } from '../graphql/subscriptions';\n\nfunction BookingList({ updateTimeSlots, userId, userName }) {\n\n  const [bookingList, setBookingList] = useState([]);\n\n  const adminId = \"a2cda53a-aa2b-49b0-a442-4e1bd7668150\"\n\n  useEffect(() => {\n    const getTimeSlots = async () => {\n      const result = await API.graphql(graphqlOperation(listEventss,\n        userId !== adminId\n          ? {\n            filter: {\n              userId: {\n                eq: userId\n              }\n            }\n          } : \"\"\n      ));\n      const result2 = result.data.listEventss.items;\n      setBookingList(result2)\n      // console.log(result2)\n    }\n    getTimeSlots();\n  }, [bookingList, userId])\n\n  const handleDeleteEvent = async eventId => {\n    const input = {\n      id: eventId\n    }\n    await API.graphql(graphqlOperation(deleteEvents, { input }))\n    updateTimeSlots();\n  }\n\n\n  // update after create booking\n  useEffect(() => {\n    const createEventListener = API.graphql(graphqlOperation(onCreateEvents))\n      .subscribe({\n        next: eventData => {\n          const newEvent = eventData.value.data.onCreateEvents\n          const prevEvent = bookingList.filter(booking => booking.id !== bookingList.id)\n          const updatedEvents = [newEvent, ...prevEvent]\n          setBookingList(updatedEvents)\n        }\n      })\n    return () => {\n      //clean up subscription\n      createEventListener.unsubscribe()\n    }\n  })\n\n\n  // update after delete booking\n  useEffect(() => {\n    const deleteEventListener = API.graphql(graphqlOperation(onDeleteEvents)).subscribe({\n      next: eventData => {\n        const deletedBooking = eventData.value.data.onDeleteEvents\n        const updatedBookings = bookingList.filter(booking => booking.id !== deletedBooking.id)\n        setBookingList(updatedBookings)\n      }\n    });\n    return () => {\n      //clean up subscription\n      deleteEventListener.unsubscribe()\n    }\n  })\n\n\n  return (\n    bookingList.map((booking, idx) => {\n      return (\n        <div className=\"rowStyle\" key={booking.id + userId} >\n          <p> {\"Title: \"}{booking.title}</p>\n          <p> {\"Date: \"}{booking.date}</p>\n          <p> {\"Timeslot: \"}{booking.timeslot}</p>\n          <p> {\"Location: \"} {booking.resourceId.locationName} </p>\n          <p> {\"Resource Type: \"} {booking.resourceId.resourceType} </p>\n          <p> {\"Resource: \"} {booking.resourceId.name} </p>\n          <p> {\"Created by: \"}{booking.userId} {\" @ \"} {booking.createdAt} </p>\n          <button onClick={() => handleDeleteEvent(booking.id)} >\n            Delete Booking\n          </button>\n        </div>\n\n      )\n    })\n  )\n}\n\nexport default BookingList\n","/Users/lion/Desktop/hds/src/components/nav/Button.js",[],"/Users/lion/Desktop/hds/src/components/Admin.js",["77","78","79","80","81","82","83"],"import React, { useState, useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { createResources } from '../graphql/mutations';\nimport './Resource.css';\n\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\nimport { Calendar } from 'react-modern-calendar-datepicker';\n\nfunction Admin() {\n\n  const [locationName, setLocation] = useState(\"\");\n  const [resourceType, setResourceType] = useState(\"\");\n  const [resourceName, setResource] = useState(\"\");\n\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n\n  //useEffect(() => {\n  //  Auth.currentUserInfo()\n  //    .then(user => {\n  //      setPostOwnerUsername(user.username)\n  //      setPostOwnerId(user.attributes.sub)\n  //    })\n  //})\n\n\n  const handleChangeLocation = e => {\n    setLocation(e.target.value)\n  }\n\n  const handleChangeResourceType = e => {\n    setResourceType(e.target.value)\n  }\n\n  const handleChangeResource = e => {\n    setResource(e.target.value)\n  }\n\n  const handleAddResource = async e => {\n    e.preventDefault()\n\n    const input = {\n      name: resourceName,\n      resourceType: resourceType,\n      locationName: locationName\n    }\n\n    await API.graphql(graphqlOperation(createResources, { input }))\n\n    setLocation(\"\")\n    setResourceType(\"\")\n    setResource(\"\")\n  }\n\n\n  const handleDisableDates = async e => {\n    e.preventDefault()\n\n    //const input = {\n    //  day: ,\n    //  month: ,\n    //  year:\n    //}\n\n  }\n\n  // get today's date\n  const today = new Date();\n  let dd = Number(today.getDate());\n  let mm = Number(today.getMonth() + 1);\n  let yyyy = Number(today.getFullYear());\n\n  // block out days before today\n  const minimumDate = {\n    year: yyyy,\n    month: mm,\n    day: dd\n  };\n\n  // for admin to disable\n  const disabledDays = [\n    {\n      year: 2021,\n      month: 1,\n      day: 20,\n    }\n  ];\n\n\n  return (\n\n    <div>\n\n      <form className=\"add-resource\" onSubmit={handleAddResource}>\n        <input\n          style={{ font: '10px' }}\n          type=\"text\"\n          placeholder=\"Location\"\n          name=\"Location\"\n          required\n          value={locationName}\n          onChange={handleChangeLocation}\n        />\n        <input\n          style={{ font: '10px' }}\n          type=\"text\"\n          placeholder=\"Resource Type\"\n          name=\"Resource Type\"\n          required\n          value={resourceType}\n          onChange={handleChangeResourceType}\n        />\n        <input\n          style={{ font: '10px' }}\n          type=\"text\"\n          placeholder=\"Resource\"\n          name=\"Resource\"\n          required\n          value={resourceName}\n          onChange={handleChangeResource}\n        />\n        <input\n          type=\"submit\"\n          className=\"btn\"\n          value=\"Create Resource\"\n          style={{ fontSize: '15px' }}\n        />\n      </form>\n\n      {/*<Calendar\n        value={selectedDayRange}\n        onChange={setSelectedDayRange}\n        //inputPlaceholder=\"Please select a day\"\n        minimumDate={minimumDate}\n        disabledDays={disabledDays} // here we pass them\n        shouldHighlightWeekends\n        calendarClassName=\"responsive-calendar\"\n      />*/}\n\n      <button>\n        Disable Date(s)\n      </button>\n    </div>\n  )\n}\n\nexport default Admin\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"92","line":16,"column":10,"nodeType":"90","messageId":"91","endLine":16,"endColumn":18},{"ruleId":"88","severity":1,"message":"93","line":16,"column":20,"nodeType":"90","messageId":"91","endLine":16,"endColumn":31},{"ruleId":"88","severity":1,"message":"94","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":14},{"ruleId":"88","severity":1,"message":"95","line":8,"column":10,"nodeType":"90","messageId":"91","endLine":8,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":93,"column":37,"nodeType":"98","messageId":"99","endLine":93,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":111,"column":6,"nodeType":"102","endLine":111,"endColumn":42,"suggestions":"103"},{"ruleId":"88","severity":1,"message":"94","line":1,"column":33,"nodeType":"90","messageId":"91","endLine":1,"endColumn":37},{"ruleId":"88","severity":1,"message":"89","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"104","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"105","line":15,"column":10,"nodeType":"90","messageId":"91","endLine":15,"endColumn":26},{"ruleId":"88","severity":1,"message":"106","line":15,"column":28,"nodeType":"90","messageId":"91","endLine":15,"endColumn":47},{"ruleId":"88","severity":1,"message":"107","line":58,"column":9,"nodeType":"90","messageId":"91","endLine":58,"endColumn":27},{"ruleId":"88","severity":1,"message":"108","line":76,"column":9,"nodeType":"90","messageId":"91","endLine":76,"endColumn":20},{"ruleId":"88","severity":1,"message":"109","line":83,"column":9,"nodeType":"90","messageId":"91","endLine":83,"endColumn":21},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'signedIn' is assigned a value but never used.","'setSignedIn' is assigned a value but never used.","'Auth' is defined but never used.","'listEventss' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateTimeSlots'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'Calendar' is defined but never used.","'selectedDayRange' is assigned a value but never used.","'setSelectedDayRange' is assigned a value but never used.","'handleDisableDates' is assigned a value but never used.","'minimumDate' is assigned a value but never used.","'disabledDays' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [resourceId, date, bookingTimeSlots, updateTimeSlots]",{"range":"115","text":"116"},[2772,2808],"[resourceId, date, bookingTimeSlots, updateTimeSlots]"]